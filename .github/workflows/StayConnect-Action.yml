name: Java CI with Gradle

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.3
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb

    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          until docker run --network host mysql:8.3 mysqladmin ping -h 127.0.0.1 --silent; do sleep 1; done

      - name: Secure MySQL installation
        run: |
          docker exec mysql mysql -uroot -ppassword -e "DELETE FROM mysql.user WHERE User='';"
          docker exec mysql mysql -uroot -ppassword -e "DROP DATABASE IF EXISTS test;"
          docker exec mysql mysql -uroot -ppassword -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
          docker exec mysql mysql -uroot -ppassword -e "FLUSH PRIVILEGES;"

      - name: Configure MySQL secure settings
        run: |
          docker exec mysql bash -c 'echo "[mysqld]" >> /etc/mysql/my.cnf'
          docker exec mysql bash -c 'echo "pid-file = /var/lib/mysql/mysqld.pid" >> /etc/mysql/my.cnf'
          docker restart mysql

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
