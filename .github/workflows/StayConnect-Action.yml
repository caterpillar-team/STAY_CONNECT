name: Java CI with Gradle

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      JSON_WEB_TOKEN_EXPIRATION_TIME: ${{ secrets.JSON_WEB_TOKEN_EXPIRATION_TIME }}
      JSON_WEB_TOKEN_SECRET_KEY: ${{ secrets.JSON_WEB_TOKEN_SECRET_KEY }}
      MYSQL_SERVER_URL: ${{ secrets.MYSQL_SERVER_URL }}
      MYSQL_SERVER_USERNAME: ${{ secrets.MYSQL_SERVER_USERNAME }}
      MYSQL_SERVER_PASSWORD: ${{ secrets.MYSQL_SERVER_PASSWORD }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      BASE_URL: ${{ secrets.BASE_URL }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      PRODUCTION_MYSQL_URL: ${{ secrets.PRODUCTION_MYSQL_URL }}
      PRODUCTION_MYSQL_ROOT_PASSWORD: ${{ secrets.PRODUCTION_MYSQL_ROOT_PASSWORD }}
      PRODUCTION_MYSQL_DATABASE: ${{ secrets.PRODUCTION_MYSQL_DATABASE }}
      PRODUCTION_MYSQL_USERNAME: ${{ secrets.PRODUCTION_MYSQL_USERNAME }}
      PRODUCTION_MYSQL_PASSWORD: ${{ secrets.PRODUCTION_MYSQL_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Create environment variables file
        run: |
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
          echo "JSON_WEB_TOKEN_EXPIRATION_TIME=${{ secrets.JSON_WEB_TOKEN_EXPIRATION_TIME }}" >> .env
          echo "JSON_WEB_TOKEN_SECRET_KEY=${{ secrets.JSON_WEB_TOKEN_SECRET_KEY }}" >> .env
          echo "MYSQL_SERVER_URL=${{ secrets.MYSQL_SERVER_URL }}" >> .env
          echo "MYSQL_SERVER_USERNAME=${{ secrets.MYSQL_SERVER_USERNAME }}" >> .env
          echo "MYSQL_SERVER_PASSWORD=${{ secrets.MYSQL_SERVER_PASSWORD }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.PRODUCTION_MYSQL_URL }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.PRODUCTION_MYSQL_ROOT_PASSWORD }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.PRODUCTION_MYSQL_DATABASE }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.PRODUCTION_MYSQL_USERNAME }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.PRODUCTION_MYSQL_PASSWORD }}" >> .env

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -Dspring.profiles.active=prod -x test

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
