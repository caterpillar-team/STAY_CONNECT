spring.application.name=StayConnect
# devtools
spring.devtools.restart.enabled = true
spring.devtools.livereload.enabled=true
# jwt
jwt.expiration=1800000
jwt.secret=sleeping_princess_in_the_forest_of_buildings
# MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# spring.datasource.url=jdbc:mysql://koonlx.iptime.org:3306/stayconnect?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=princess
#spring.datasource.password=princess
spring.datasource.url=jdbc:mysql://localhost:3306/stayconnect
spring.datasource.username=root
spring.datasource.password=12345678
# HikariCP
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true
# JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform
spring.jpa.hibernate.ddl-auto=create
spring.jpa.open-in-view=false
# docker-compose
# spring.docker.compose.lifecycle-management=none
# spring.docker.compose.file=./docker/docker-compose.yml
# spring.docker.compose.profiles.active=
# spring.docker.compose.skip.in-tests=false
# spring.docker.compose.readiness.timeout=60s
# thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
# ########################################################### GOOGLE ###########################################################
# OAuth2 google
# Google OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=374675611127-75e4gi85f6oepvbul6r3jsjg1b5sqv0b.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile, email
# 기본 URL 설정
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
# OAuth2 프로바이더 정보
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
# 기본 로그인 성공 및 실패 URL 설정
spring.security.oauth2.client.registration.google.client-authentication-method=post
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
# ##############################################################################################################################